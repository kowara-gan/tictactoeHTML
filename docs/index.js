/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./ts/index.ts":
/*!*********************!*\
  !*** ./ts/index.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state */ \"./ts/state.ts\");\n/* harmony import */ var _times__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./times */ \"./ts/times.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\n\r\n\r\nwindow.addEventListener('DOMContentLoaded', function () {\r\n    //初期化\r\n    var state = { board: ['', '', '', '', '', '', '', '', ''], isFirst: true };\r\n    var movesList = [];\r\n    var firstProcedure = { mode: 'AUTO' };\r\n    var secondProcedure = { mode: 'AUTO' };\r\n    var firstPlayer = { mode: 'CPU' };\r\n    var secondPlayer = { mode: 'CPU' };\r\n    var isGameActive = true;\r\n    var isWhileMoving = false;\r\n    //moveのマスにOXマークを書く\r\n    var update = function (move) {\r\n        tiles[move].innerHTML = state.isFirst ? svgX : svgO;\r\n        movesList.push(move);\r\n        _state__WEBPACK_IMPORTED_MODULE_0__.updateMove(state, move);\r\n        //ターン情報を更新\r\n        playerDisplay.innerHTML = '<p class=\"announce\">Turn of&nbsp;&nbsp;</p>' + (state.isFirst ? svgX : svgO);\r\n        //勝敗判定\r\n        if (_state__WEBPACK_IMPORTED_MODULE_0__.isLose(state)) {\r\n            var tileNums = _state__WEBPACK_IMPORTED_MODULE_0__.getLine(state); //揃ったラインを入手してマスの色を変更\r\n            tiles[tileNums[0]].classList.add('three');\r\n            tiles[tileNums[1]].classList.add('three');\r\n            tiles[tileNums[2]].classList.add('three');\r\n            announce(state.isFirst ? 'X_WON' : 'O_WON');\r\n            isGameActive = false;\r\n            return;\r\n        }\r\n        //引き分け判定\r\n        if (_state__WEBPACK_IMPORTED_MODULE_0__.isTie(state)) {\r\n            announce('TIE');\r\n            isGameActive = false;\r\n            return;\r\n        }\r\n    };\r\n    //勝敗が決まるか、引き分けの時に文字情報を更新\r\n    var announce = function (result) {\r\n        switch (result) {\r\n            case 'O_WON':\r\n                playerDisplay.innerHTML = svgO + '<p class=\"announce\"> Won</p>';\r\n                break;\r\n            case 'X_WON':\r\n                playerDisplay.innerHTML = svgX + '<p class=\"announce\"> Won</p>';\r\n                break;\r\n            case 'TIE':\r\n                playerDisplay.innerHTML = '<p class=\"announce\">Tie</p>';\r\n        }\r\n    };\r\n    //現在のプレイヤーモードを確認 'HUM' | 'RDM' | 'CPU'\r\n    var isPlayerMode = function (mode) {\r\n        return state.isFirst && firstPlayer.mode == mode || !state.isFirst && secondPlayer.mode == mode;\r\n    };\r\n    var isAUTO = function () {\r\n        return state.isFirst && firstProcedure.mode == 'AUTO' || !state.isFirst && secondProcedure.mode == 'AUTO';\r\n    };\r\n    //プレイヤーの入力があった場合\r\n    var userAction = function (move) { return __awaiter(void 0, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (isWhileMoving || !isGameActive)\r\n                        return [2 /*return*/];\r\n                    if (!!isPlayerMode('HUM')) return [3 /*break*/, 2];\r\n                    return [4 /*yield*/, cpuAction()];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [3 /*break*/, 3];\r\n                case 2:\r\n                    if (move != undefined && _state__WEBPACK_IMPORTED_MODULE_0__.isValidMove(state, move)) { //プレイヤーモードかつマスの情報が正しい\r\n                        update(move);\r\n                    }\r\n                    _a.label = 3;\r\n                case 3:\r\n                    if (!isAUTO())\r\n                        return [2 /*return*/];\r\n                    if (!!isPlayerMode('HUM')) return [3 /*break*/, 5];\r\n                    return [4 /*yield*/, cpuAction()];\r\n                case 4:\r\n                    _a.sent();\r\n                    _a.label = 5;\r\n                case 5: return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    //コンピュータの入力\r\n    var cpuAction = function () { return __awaiter(void 0, void 0, void 0, function () {\r\n        var move;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (!isGameActive)\r\n                        return [2 /*return*/];\r\n                    //遅延の開始\r\n                    isWhileMoving = true;\r\n                    return [4 /*yield*/, _times__WEBPACK_IMPORTED_MODULE_1__.wait(500)];\r\n                case 1:\r\n                    _a.sent();\r\n                    if (isPlayerMode('RDM')) { //ランダムモード\r\n                        while (true) { //正しいマスの情報がでるまでランダムで繰り返し\r\n                            move = Math.floor(Math.random() * 9);\r\n                            if (_state__WEBPACK_IMPORTED_MODULE_0__.isValidMove(state, move))\r\n                                break;\r\n                        }\r\n                    }\r\n                    else {\r\n                        move = _state__WEBPACK_IMPORTED_MODULE_0__.startAlphaBeta(state);\r\n                    } //αβCPUモード\r\n                    //moveのマスにOXマークを書く\r\n                    if (move != undefined)\r\n                        update(move);\r\n                    isWhileMoving = false;\r\n                    if (!isAUTO())\r\n                        return [2 /*return*/];\r\n                    if (!!isPlayerMode('HUM')) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, cpuAction()];\r\n                case 2:\r\n                    _a.sent();\r\n                    _a.label = 3;\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    //戻るボタンを押した場合\r\n    var onBack = function () {\r\n        var remove = movesList.pop();\r\n        if (remove == undefined)\r\n            return;\r\n        tiles[remove].innerHTML = '';\r\n        _state__WEBPACK_IMPORTED_MODULE_0__.updateRemove(state, remove);\r\n        isGameActive = true;\r\n        playerDisplay.innerHTML = '<p class=\"announce\">Turn of&nbsp;&nbsp;</p>' + (state.isFirst ? svgX : svgO);\r\n        tiles.forEach(function (tile) {\r\n            tile.classList.remove('three');\r\n        });\r\n        //AUTO中の遅延を止める\r\n        _times__WEBPACK_IMPORTED_MODULE_1__.deleteWait();\r\n        isWhileMoving = false;\r\n    };\r\n    //リセットボタンを押した場合\r\n    var onReset = function () {\r\n        _state__WEBPACK_IMPORTED_MODULE_0__.resetState(state);\r\n        isGameActive = true;\r\n        playerDisplay.innerHTML = '<p class=\"announce\">Turn of&nbsp;&nbsp;</p>' + (state.isFirst ? svgX : svgO);\r\n        movesList = [];\r\n        //三目並べの画面初期化\r\n        tiles.forEach(function (tile) {\r\n            tile.innerHTML = '';\r\n            tile.classList.remove('three');\r\n        });\r\n        //AUTO中の遅延を止める\r\n        _times__WEBPACK_IMPORTED_MODULE_1__.deleteWait();\r\n        isWhileMoving = false;\r\n        //再起動\r\n        if (!isPlayerMode('HUM')) {\r\n            userAction();\r\n        }\r\n    };\r\n    //１ＰProcedureボタンを押した場合\r\n    var onChangeFirstProcedure = function () {\r\n        switch (firstProcedure.mode) {\r\n            case 'AUTO': {\r\n                firstProcedure.mode = 'CLICK';\r\n                break;\r\n            }\r\n            case 'CLICK': {\r\n                firstProcedure.mode = 'AUTO';\r\n                break;\r\n            }\r\n            default: firstProcedure.mode = 'AUTO';\r\n        }\r\n        //AUTO中の遅延を止める\r\n        _times__WEBPACK_IMPORTED_MODULE_1__.deleteWait();\r\n        isWhileMoving = false;\r\n        firstProcedureButton.innerHTML = firstProcedure.mode;\r\n    };\r\n    //２ＰProcedureボタンを押した場合\r\n    var onChangeSecondProcedure = function () {\r\n        switch (secondProcedure.mode) {\r\n            case 'AUTO': {\r\n                secondProcedure.mode = 'CLICK';\r\n                break;\r\n            }\r\n            case 'CLICK': {\r\n                secondProcedure.mode = 'AUTO';\r\n                break;\r\n            }\r\n            default: secondProcedure.mode = 'AUTO';\r\n        }\r\n        //AUTO中の遅延を止める\r\n        _times__WEBPACK_IMPORTED_MODULE_1__.deleteWait();\r\n        isWhileMoving = false;\r\n        secondProcedureButton.innerHTML = secondProcedure.mode;\r\n    };\r\n    //１Ｐボタンを押した場合\r\n    var onChangeFirstPlayer = function () {\r\n        switch (firstPlayer.mode) {\r\n            case 'CPU': {\r\n                firstPlayer.mode = 'HUM';\r\n                break;\r\n            }\r\n            case 'HUM': {\r\n                firstPlayer.mode = 'RDM';\r\n                break;\r\n            }\r\n            case 'RDM': {\r\n                firstPlayer.mode = 'CPU';\r\n                break;\r\n            }\r\n            default: firstPlayer.mode = 'HUM';\r\n        }\r\n        //AUTO中の遅延を止める\r\n        _times__WEBPACK_IMPORTED_MODULE_1__.deleteWait();\r\n        isWhileMoving = false;\r\n        firstPlayerButton.innerHTML = firstPlayer.mode + \"_X\";\r\n    };\r\n    //２Ｐボタンを押した場合\r\n    var onChangeSecondPlayer = function () {\r\n        switch (secondPlayer.mode) {\r\n            case 'CPU': {\r\n                secondPlayer.mode = 'HUM';\r\n                break;\r\n            }\r\n            case 'HUM': {\r\n                secondPlayer.mode = 'RDM';\r\n                break;\r\n            }\r\n            case 'RDM': {\r\n                secondPlayer.mode = 'CPU';\r\n                break;\r\n            }\r\n            default: secondPlayer.mode = 'HUM';\r\n        }\r\n        //AUTO中の遅延を止める\r\n        _times__WEBPACK_IMPORTED_MODULE_1__.deleteWait();\r\n        isWhileMoving = false;\r\n        secondPlayerButton.innerHTML = secondPlayer.mode + \"_O\";\r\n    };\r\n    //htmlの要素を入手、クリック関数を登録\r\n    //9マスグリッド\r\n    var tiles = Array.from(document.querySelectorAll('.tile'));\r\n    tiles.forEach(function (tile, move) {\r\n        tile.addEventListener('click', function () { return userAction(move); });\r\n    });\r\n    //アナウンス文\r\n    var playerDisplay = document.querySelector('.display-player');\r\n    //各種ボタン\r\n    var backButton = document.querySelector('#back');\r\n    backButton.addEventListener('click', onBack);\r\n    var firstProcedureButton = document.querySelector('#firstProcedure');\r\n    firstProcedureButton.addEventListener('click', onChangeFirstProcedure);\r\n    firstProcedureButton.innerHTML = firstProcedure.mode;\r\n    var secondProcedureButton = document.querySelector('#secondProcedure');\r\n    secondProcedureButton.addEventListener('click', onChangeSecondProcedure);\r\n    var resetButton = document.querySelector('#reset');\r\n    resetButton.addEventListener('click', onReset);\r\n    secondProcedureButton.innerHTML = secondProcedure.mode;\r\n    var firstPlayerButton = document.querySelector('#firstPlayer');\r\n    firstPlayerButton.addEventListener('click', onChangeFirstPlayer);\r\n    firstPlayerButton.innerHTML = firstPlayer.mode + \"_X\";\r\n    var secondPlayerButton = document.querySelector('#secondPlayer');\r\n    secondPlayerButton.addEventListener('click', onChangeSecondPlayer);\r\n    secondPlayerButton.innerHTML = secondPlayer.mode + \"_O\";\r\n    //svgデータ\r\n    var svgO = '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"1em\" height=\"1em\" viewBox=\"0 0 40 40\"fill=\"#d82a47\"><path d=\"M20,10A10,10,0,1,1,10,20,10,10,0,0,1,20,10M20,0A20,20,0,1,0,40,20,20,20,0,0,0,20,0Z\"/></svg>';\r\n    var svgX = '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"1em\" height=\"1em\" viewBox=\"0 0 40 40\"fill=\"#00aaf8\"><path d=\"M32 40 L20 28 L8 40 L0 32 L12 20 L0 8 L8 0 L20 12 L32 0 L40 8 L28 20 L40 32\" /></svg>';\r\n});\r\n\n\n//# sourceURL=webpack://tictacotoehtml/./ts/index.ts?");

/***/ }),

/***/ "./ts/state.ts":
/*!*********************!*\
  !*** ./ts/state.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"updateMove\": () => (/* binding */ updateMove),\n/* harmony export */   \"updateRemove\": () => (/* binding */ updateRemove),\n/* harmony export */   \"getLine\": () => (/* binding */ getLine),\n/* harmony export */   \"isLose\": () => (/* binding */ isLose),\n/* harmony export */   \"isTie\": () => (/* binding */ isTie),\n/* harmony export */   \"isValidMove\": () => (/* binding */ isValidMove),\n/* harmony export */   \"resetState\": () => (/* binding */ resetState),\n/* harmony export */   \"startAlphaBeta\": () => (/* binding */ startAlphaBeta)\n/* harmony export */ });\n//勝敗確認に使用する配列\r\nvar winningConditions = function () { return [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n]; };\r\n//moveのマスにマークを更新\r\nvar updateMove = function (state, move) {\r\n    state.board[move] = state.isFirst ? 'X' : 'O';\r\n    state.isFirst = !state.isFirst;\r\n};\r\n//moveのマスにマークを更新\r\nvar updateRemove = function (state, move) {\r\n    state.board[move] = '';\r\n    state.isFirst = !state.isFirst;\r\n};\r\n//勝敗のラインがある場合そのマスを返す\r\nvar getLine = function (state) {\r\n    var ret = [];\r\n    for (var i = 0; i <= 7; i++) {\r\n        var winCondition = winningConditions()[i];\r\n        var a = state.board[winCondition[0]];\r\n        var b = state.board[winCondition[1]];\r\n        var c = state.board[winCondition[2]];\r\n        if (a === '' || b === '' || c === '') {\r\n            continue;\r\n        }\r\n        if (a === b && b === c) {\r\n            ret.push(winCondition[0]);\r\n            ret.push(winCondition[1]);\r\n            ret.push(winCondition[2]);\r\n            return ret;\r\n        }\r\n    }\r\n    return ret;\r\n};\r\n//勝敗判定\r\nvar isLose = function (state) {\r\n    return getLine(state).length == 0 ? false : true;\r\n};\r\n//引き分け判定\r\nvar isTie = function (state) {\r\n    if (!state.board.includes(''))\r\n        return true;\r\n    return false;\r\n};\r\n//移動先のマスが正しいか判定\r\nvar isValidMove = function (state, move) {\r\n    if (state.board[move] === 'X' || state.board[move] === 'O') {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n//状態を初期化\r\nvar resetState = function (state) {\r\n    state.board = ['', '', '', '', '', '', '', '', ''];\r\n    state.isFirst = true;\r\n};\r\nvar nextMoves = function (state) {\r\n    var ret = [];\r\n    state.board.forEach(function (cell, move) {\r\n        if (cell === '')\r\n            ret.push(move);\r\n    });\r\n    return ret;\r\n};\r\n//αβ法の中身\r\nvar alphaBeta = function (state, alpha, beta) {\r\n    if (isLose(state))\r\n        return -1;\r\n    if (isTie(state))\r\n        return 0;\r\n    nextMoves(state).forEach(function (move) {\r\n        var score = -alphaBeta(nextState(state, move), -beta, -alpha);\r\n        if (score > alpha)\r\n            alpha = score;\r\n        if (alpha >= beta)\r\n            return alpha;\r\n    });\r\n    return alpha;\r\n};\r\n//αβ法を使用\r\nvar startAlphaBeta = function (state) {\r\n    var bestActions = [];\r\n    var bestScore = Number.MIN_SAFE_INTEGER;\r\n    nextMoves(state).forEach(function (move) {\r\n        var score = -alphaBeta(nextState(state, move), Number.MIN_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\r\n        if (score > bestScore) {\r\n            bestScore = score;\r\n            bestActions.splice(0);\r\n            bestActions.push(move);\r\n        }\r\n        else if (score == bestScore) {\r\n            bestActions.push(move);\r\n        }\r\n    });\r\n    return bestActions[Math.floor(Math.random() * bestActions.length)];\r\n};\r\n//moveのマスにマークを更新した状態を返す\r\nvar nextState = function (state, move) {\r\n    var newState = { board: state.board.concat(), isFirst: state.isFirst };\r\n    updateMove(newState, move);\r\n    return newState;\r\n};\r\n\n\n//# sourceURL=webpack://tictacotoehtml/./ts/state.ts?");

/***/ }),

/***/ "./ts/times.ts":
/*!*********************!*\
  !*** ./ts/times.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"wait\": () => (/* binding */ wait),\n/* harmony export */   \"deleteWait\": () => (/* binding */ deleteWait)\n/* harmony export */ });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\n//遅延用関数群\r\n//import * as Times from './times';で使用可能\r\n//関数の引数に　async をつける　例const kannsuu = async () => {};\r\n//Time.wait(100);で一秒停止　Times.deleteWait();で遅延コルーチンがすべて消える\r\nvar times = [];\r\nvar wait = function (ms) { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {\r\n    return [2 /*return*/, new Promise(function (resolve) { return times.push(setTimeout(resolve, ms)); })];\r\n}); }); };\r\nvar deleteWait = function () {\r\n    times.forEach(function (time) {\r\n        clearTimeout(time);\r\n    });\r\n};\r\n\n\n//# sourceURL=webpack://tictacotoehtml/./ts/times.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./ts/index.ts");
/******/ 	
/******/ })()
;